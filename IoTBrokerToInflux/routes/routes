const express = require('express');
//const Model = require('../models/model');

const router = express.Router()

//Post Method
router.post('/post', async (req, res) => {
    console.log('got post:',req.body);
    const data = new Model({
        name: req.body.name,
        parts: req.body.parts,
        signs: req.body.signs,
    })

    try {
        const dataToSave = await data.save();
	console.log('dataToSave',dataToSave);
        res.status(200).json(dataToSave)
    }
    catch (error) {
        res.status(400).json({message: error.message})
    }
})

// Get all Method
// simply return everything
// **** CAUTION: this can get very big ****
// use list to get a list of devices incl. id
// and fetch each device in a single request

router.get('/getAll', async (req, res) => {
    console.log('getAll',deviceids);
    try{
        const data = await Model.find();
        res.json(data)
    }
    catch(error){
        res.status(500).json({message: error.message})
    }
})

// List all devices, but return only name, id and number of parts and signs per device
router.get('/list', async (req, res) => {
    try{
        const data = await Model.find();
	let list = [];
	data.forEach( ( o, i ) => {
	    list.push({
		name: o.name,
		id: o._id,
		parts: o.parts.length,
		signs: o.signs.length
	    });
	});
	console.log('list:', list);
	
        res.json(list)
    }
    catch(error){
        res.status(500).json({message: error.message})
    }
})

//Get by ID Method
router.get('/getOne/:id', async (req, res) => {
    try{
        const data = await Model.findById(req.params.id);
        res.json(data)
    }
    catch(error){
        res.status(500).json({message: error.message})
    }
})

//Update by ID Method
router.patch('/update/:id', async (req, res) => {
    try {
        const id = req.params.id;
        const updatedData = req.body;
        const options = { new: true };
	console.log('got update',id);
        const result = await Model.findByIdAndUpdate(
            id, updatedData, options
        )

        res.send(result)
    }
    catch (error) {
        res.status(400).json({ message: error.message })
    }
})

//Delete by ID Method
router.delete('/delete/:id', async (req, res) => {
    try {
        const id = req.params.id;
        const data = await Model.findByIdAndDelete(id)
        res.send(`Document with ${data.name} has been deleted..`)
    }
    catch (error) {
        res.status(400).json({ message: error.message })
    }
})

module.exports = router;
